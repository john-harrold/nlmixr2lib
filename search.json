[{"path":"https://nlmixr2.github.io/nlmixr2lib/articles/create-model-library.html","id":"model-library-conventions-within-nlmixr2lib","dir":"Articles","previous_headings":"","what":"Model library conventions within nlmixr2lib","title":"Creating a model library","text":"Compartment parameter names lower case use snakeCase combined way. Compartment parameter names selected align used rxode2::linCmt() described vignette: vignette(“rxode2-model-types”, package = “rxode2”).","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/articles/create-model-library.html","id":"compartment-naming","dir":"Articles","previous_headings":"Model library conventions within nlmixr2lib","what":"Compartment naming","title":"Creating a model library","text":"Compartment naming follows compartment names linCmt() augmentation compartments: depot: extravascular dosing compartment (example, gut oral dosing subcutaneous space subcutaneous dosing) central: intravascular compartment used intravenous dosing typical pharmacokinetic (PK) model sampling drug peripheral1, peripheral2: first second peripheral compartments 2- 3-compartment PK models effect: compartment effect compartment models Therapeutic-area-specific models use consistent compartment parameter naming. adding new therapeutic area model library, please discuss naming first new GitHub issue.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/articles/create-model-library.html","id":"estimated-parameter-naming","dir":"Articles","previous_headings":"Model library conventions within nlmixr2lib","what":"Estimated parameter naming","title":"Creating a model library","text":"enable consistent cross-model compatibility, following conventions used unless strong reason exception: Pharmacokinetic concentrations central compartment named Cc. Cc used even using linCmt() model (case Cc <- linCmt() used residual error applied Cc parameter). Therapeutic-area-specific models use consistent compartment parameter naming. adding new therapeutic area model library, please discuss naming first new GitHub issue.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/articles/create-model-library.html","id":"parameter-naming","dir":"Articles","previous_headings":"Model library conventions within nlmixr2lib","what":"Parameter naming","title":"Creating a model library","text":"PK models use following parameter naming conventions: ka: absorption rate cl: clearance q: intercompartmental clearance (central peripheral1 compartments) q2: second intercompartmental clearance (central peripheral2 compartments) vc: central volume distribution vp, vp2: first second peripheral compartment volumes micro-constants used, use following naming conventions: kel elimination rate (cl/vc) k12, k21, k13, k31: intercompartmental transit rates (q/vc, q/vp, q2/vc, q2/vp2, respectively)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/articles/create-model-library.html","id":"parameter-transforms","dir":"Articles","previous_headings":"Model library conventions within nlmixr2lib","what":"Parameter transforms","title":"Creating a model library","text":"Parameters often estimated transformed scale. instance, natural logarithm transform often used parameters must positive, logit transform often used parameter must remain within specific range. Transformed parameters prefixed indicator transformation. Preferred transformation prefixes : l (lower case L): natural log transform logit: logit transform probit: probit transform transform similarly include full transform prefix Generally, transform natural logarithm, include full name prefix. example, natural logarithm-transformed ka lka logit-transformed emax logitemax.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/articles/create-model-library.html","id":"random-effects","dir":"Articles","previous_headings":"Model library conventions within nlmixr2lib","what":"Random effects","title":"Creating a model library","text":"Random effects estimates part distribution varying grouping factor. grouping factor often subject clinical trial. (NONMEM users, random effects often referred inter-individual variability.) Random effect parameters prefix (transformed) parameter name eta. example, random effect log-transformed clearance named etalcl.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/articles/create-model-library.html","id":"drug-effects","dir":"Articles","previous_headings":"Model library conventions within nlmixr2lib","what":"Drug effects","title":"Creating a model library","text":"Different drug effects may investigated model building. , multiple drug effect styles (linear, Emax, threshold, etc.) may investigated user. enable simpler changes drug effects minimize chance parameter name collisions combining models, following rules strongly recommended: Drug effects calculated model enable changing type drug effect (e.g. linear Emax). parameter name drug effect called drugEffect followed name part model closely associated drug effect. example, Simeoni 2004 model, drug effect called drugEffectCyclingCells.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/articles/create-model-library.html","id":"model-files","dir":"Articles","previous_headings":"","what":"Model files","title":"Creating a model library","text":"Files model library following characteristics: first line inside function description assignment. description <- \"description model\" right inside function() ini({}) block. model literature reference associated , second line inside function reference, example, reference <- \"Richard Hooijmaijers, Matthew Fidler, William S. Denney (2022).  nlmixr2lib: Model Library 'nlmixr2'.  https://nlmixr2.github.io/nlmixr2lib/\" helpful give user information model load, can added meta-data \"message\" attribute model. Note case, must give function name last line model ensure returned value evaluation file. (See oncology_xenograft_simeoni_2004.R example adding message.) model combined models expects certain objects defined depends value specified. example tumor growth model driven drug concentration central compartment, following used: depends <-c(\"Cc\") can also helpful specify compartments dosing expected. can done following manner: dosing <- c(\"central\", \"depot\") Units used model can specified using list units  <- list(dosing= \"mg/kg\", time=\"hr\") add fields list please discuss first GitHub issue. remainder file nlmixr2 model function typical ini() model() block. name file match name model within file. function modify, self-start, otherwise help user make sense, add new file R/ directory file name function name updateModelName() using word update followed model name camelCase (e.g. updateOncologyXenograftSimeoni2004). function added, please add messages described , well. Update functions must able take function, rxUi object, nlmixr2fitCore object usually return rxUi object. examples, see package installation directory.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Richard Hooijmaijers. Author. Matthew Fidler. Author. Bill Denney. Author, maintainer.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hooijmaijers R, Fidler M, Denney B (2024). nlmixr2lib: Model Library 'nlmixr2'. R package version 0.2.0.9000,  https://nlmixr2.github.io/nlmixr2lib/, https://github.com/nlmixr2/nlmixr2lib.","code":"@Manual{,   title = {nlmixr2lib: A Model Library for 'nlmixr2'},   author = {Richard Hooijmaijers and Matthew Fidler and Bill Denney},   year = {2024},   note = {R package version 0.2.0.9000,  https://nlmixr2.github.io/nlmixr2lib/},   url = {https://github.com/nlmixr2/nlmixr2lib}, }"},{"path":"https://nlmixr2.github.io/nlmixr2lib/index.html","id":"nlmixr2lib","dir":"","previous_headings":"","what":"A Model Library for nlmixr2","title":"A Model Library for nlmixr2","text":"model library nlmixr2. package allows ways interact model library:","code":"# See all available models modellib() # Load the \"PK_1cmt\" model modellib(name=\"PK_1cmt\") # Switch residual error to additive modellib(name=\"PK_1cmt\", reserr = \"addSd\") # Add inter-individual variability on ka and v and switch residual error to # additive and proportional modellib(name=\"PK_1cmt\", eta = c(\"lka\", \"lv\"), reserr = c(\"addSd\", \"propSd\"))"},{"path":"https://nlmixr2.github.io/nlmixr2lib/index.html","id":"modifying-models-by-piping","dir":"","previous_headings":"","what":"Modifying models by piping","title":"A Model Library for nlmixr2","text":"may also modify model library (models) piping interface. code adds inter-individual variability ka v switches residual error additive proportional.","code":"modellib(name=\"PK_1cmt\") %>%   addEta(c(\"lka\", \"lv\") %>%   addResErr(c(\"addSd\", \"propSd\"))"},{"path":"https://nlmixr2.github.io/nlmixr2lib/index.html","id":"possible-extensions","dir":"","previous_headings":"","what":"Possible extensions","title":"A Model Library for nlmixr2","text":"modellib function set-way can easily extended used applications. possible extension implementation shiny app. app can created easily add new models model library database (curated?), directly make models available users. believe can added value base model library can easily extended community way.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addComp.html","id":null,"dir":"Reference","previous_headings":"","what":"To add additional compartments to the model — addComp","title":"To add additional compartments to the model — addComp","text":"add additional compartments model","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addComp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To add additional compartments to the model — addComp","text":"","code":"addComp(   model,   numPeripheral,   central = \"central\",   depot = \"depot\",   peripheralComp = \"peripheral\",   vp = \"vp\",   vc = \"vc\",   q = \"q\" )"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addComp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To add additional compartments to the model — addComp","text":"model model function numPeripheral number peripheral compartments added model central character vector representing central compartment depot character vector representing depot compartment peripheralComp character vector representing prefix peripheral compartments vp parameter representing peripheral volume first (central) compartment prefix compartments vc parameter representing central volume first (central) compartment prefix compartment's volume q inter-compartmental clearance parameter prefix (depending model)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addComp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To add additional compartments to the model — addComp","text":"rxode2 model function additional compartment added","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addComp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"To add additional compartments to the model — addComp","text":"","code":"readModelDb(\"PK_1cmt_des\") |>   addComp(1) #>   #>   #> ℹ promote `lvp` to population parameter with initial estimate 0.05 #> ℹ change initial estimate of `lvp` to `0.05` #> ℹ promote `lq` to population parameter with initial estimate 0.05 #> ℹ change initial estimate of `lq` to `0.05` #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    lka    lcl    lvc propSd    lvp     lq  #>   0.45   1.00   3.45   0.50   0.05   0.05  #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1          central #> 2                  2      peripheral1 #>  ── Model (Normalized Syntax): ──  #> function() { #>     description <- \"One compartment PK model with linear clearance using differential equations\" #>     dosing <- c(\"central\", \"depot\") #>     ini({ #>         lka <- 0.45 #>         label(\"Absorption rate (Ka)\") #>         lcl <- 1 #>         label(\"Clearance (CL)\") #>         lvc <- 3.45 #>         label(\"Central volume of distribution (V)\") #>         propSd <- c(0, 0.5) #>         label(\"Proportional residual error (fraction)\") #>         lvp <- 0.05 #>         lq <- 0.05 #>     }) #>     model({ #>         ka <- exp(lka) #>         cl <- exp(lcl) #>         vc <- exp(lvc) #>         vp <- exp(lvp) #>         q <- exp(lq) #>         k12 <- q/vc #>         k21 <- q/vp #>         d/dt(central) <- ka * depot - kel * central + k21 * peripheral1 -  #>             k12 * central #>         d/dt(peripheral1) <- k12 * central - k21 * peripheral1 #>         Cc <- central/vc #>         Cc ~ prop(propSd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addDepot.html","id":null,"dir":"Reference","previous_headings":"","what":"To convert from Infusion/intravenous administration to first order oral absorption — addDepot","title":"To convert from Infusion/intravenous administration to first order oral absorption — addDepot","text":"convert Infusion/intravenous administration first order oral absorption","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addDepot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To convert from Infusion/intravenous administration to first order oral absorption — addDepot","text":"","code":"addDepot(   model,   central = \"central\",   depot = \"depot\",   absRate = \"ka\",   lag = FALSE,   tlag = \"lagD\" )"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addDepot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To convert from Infusion/intravenous administration to first order oral absorption — addDepot","text":"model model function central central compartment name depot depot name absRate absorption rate lag boolean representing going add lag compartment tlag character vector representing lag time","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addDepot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To convert from Infusion/intravenous administration to first order oral absorption — addDepot","text":"model depot added","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addDepot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"To convert from Infusion/intravenous administration to first order oral absorption — addDepot","text":"","code":"# most of the examples in the model library already have a depot. # for this example we will remove the depot and then add it back readModelDb(\"PK_1cmt_des\") |>   removeDepot() |>   addDepot() #>   #>   #> ! remove population parameter `lka` #> ℹ promote `lka` to population parameter with initial estimate 0.02 #> ℹ change initial estimate of `lka` to `0.02` #> ℹ promote `lfdepot` to population parameter with initial estimate 0.04 #> ℹ change initial estimate of `lfdepot` to `0.04` #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>     lka     lcl     lvc  propSd lfdepot  #>    0.02    1.00    3.45    0.50    0.04  #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2          central #>  ── Model (Normalized Syntax): ──  #> function() { #>     description <- \"One compartment PK model with linear clearance using differential equations\" #>     dosing <- c(\"central\", \"depot\") #>     ini({ #>         lka <- 0.02 #>         label(\"First order absorption rate (ka)\") #>         lcl <- 1 #>         label(\"Clearance (CL)\") #>         lvc <- 3.45 #>         label(\"Central volume of distribution (V)\") #>         propSd <- c(0, 0.5) #>         label(\"Proportional residual error (fraction)\") #>         lfdepot <- 0.04 #>         label(\"Bioavailability (F)\") #>     }) #>     model({ #>         ka <- exp(lka) #>         fdepot <- exp(lfdepot) #>         cl <- exp(lcl) #>         vc <- exp(lvc) #>         kel <- cl/vc #>         d/dt(depot) <- -ka * depot #>         f(depot) <- fdepot #>         d/dt(central) <- ka * depot + -kel * central #>         Cc <- central/vc #>         Cc ~ prop(propSd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addDirToModelDb.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a directory to the modeldb — addDirToModelDb","title":"Add a directory to the modeldb — addDirToModelDb","text":"Add directory modeldb","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addDirToModelDb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a directory to the modeldb — addDirToModelDb","text":"","code":"addDirToModelDb(dir, modeldb = data.frame())  addFileToModelDb(dir, file, modeldb)"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addDirToModelDb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a directory to the modeldb — addDirToModelDb","text":"dir Directory name containing model files modeldb starting modeldb data.frame file file name (without directory name)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addDirToModelDb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a directory to the modeldb — addDirToModelDb","text":"updated modeldb data.frame model database","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addDirToModelDb.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Add a directory to the modeldb — addDirToModelDb","text":"addFileToModelDb(): Add file modeldb","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addEta.html","id":null,"dir":"Reference","previous_headings":"","what":"Add random effects to a model — addEta","title":"Add random effects to a model — addEta","text":"Add random effects model","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addEta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add random effects to a model — addEta","text":"","code":"addEta(model, eta)"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addEta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add random effects to a model — addEta","text":"model model function eta vector parameters add random effects (sometimes referred inter-individual variability, IIV) ","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addEta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add random effects to a model — addEta","text":"model eta added requested parameters","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addEta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add random effects to a model — addEta","text":"","code":"library(rxode2) #> rxode2 2.1.3.9000 using 2 threads (see ?getRxThreads) #>   no cache: create with `rxCreateCache()` readModelDb(\"PK_1cmt\") |> addEta(\"ka\") #>   #>   #>   #>   #> → Adding eta to lka instead of ka due to mu-referencing #>   #>   #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ promote `etalka` to between subject variability with initial estimate 0.1 #> ℹ change initial estimate of `etalka` to `0.1` #> function ()  #> { #>     description <- \"One compartment PK model with linear clearance\" #>     ini({ #>         lka <- 0.45 #>         label(\"Absorption rate (Ka)\") #>         lcl <- 1 #>         label(\"Clearance (CL)\") #>         lvc <- 3.45 #>         label(\"Central volume of distribution (V)\") #>         propSd <- c(0, 0.5) #>         label(\"Proportional residual error (fraction)\") #>         etalka ~ 0.1 #>     }) #>     model({ #>         ka <- exp(lka + etalka) #>         cl <- exp(lcl) #>         vc <- exp(lvc) #>         Cc <- linCmt() #>         Cc ~ prop(propSd) #>     }) #> } #> <environment: 0x55815628a8f8>"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addResErr.html","id":null,"dir":"Reference","previous_headings":"","what":"Add residual error to a model — addResErr","title":"Add residual error to a model — addResErr","text":"Add residual error model","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addResErr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add residual error to a model — addResErr","text":"","code":"addResErr(model, reserr)"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addResErr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add residual error to a model — addResErr","text":"model model function reserr type types residual error (currently \"addSd\", \"propSd\", \"lnormSd\" accepted)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addResErr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add residual error to a model — addResErr","text":"model residual error modified","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addResErr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add residual error to a model — addResErr","text":"reserr, parameter named dependent   variable model prefix.  example, dependent   variable model Cc, parameter name propSd   become CcpropSd.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addResErr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add residual error to a model — addResErr","text":"","code":"library(rxode2) readModelDb(\"PK_1cmt\") |> addResErr(\"addSd\") #>   #>   #> ! remove population parameter `propSd` #> ℹ add residual parameter `CcaddSd` and set estimate to 1 #> ℹ change initial estimate of `CcaddSd` to `1` #> function ()  #> { #>     description <- \"One compartment PK model with linear clearance\" #>     ini({ #>         lka <- 0.45 #>         label(\"Absorption rate (Ka)\") #>         lcl <- 1 #>         label(\"Clearance (CL)\") #>         lvc <- 3.45 #>         label(\"Central volume of distribution (V)\") #>         CcaddSd <- c(0, 1) #>     }) #>     model({ #>         ka <- exp(lka) #>         cl <- exp(lcl) #>         vc <- exp(lvc) #>         Cc <- linCmt() #>         Cc ~ add(CcaddSd) #>     }) #> } #> <environment: 0x55815736a3a8> readModelDb(\"PK_1cmt\") |> addResErr(\"lnormSd\") #>   #>   #> ! remove population parameter `propSd` #> ℹ add residual parameter `CclnormSd` and set estimate to 1 #> ℹ change initial estimate of `CclnormSd` to `0.5` #> function ()  #> { #>     description <- \"One compartment PK model with linear clearance\" #>     ini({ #>         lka <- 0.45 #>         label(\"Absorption rate (Ka)\") #>         lcl <- 1 #>         label(\"Clearance (CL)\") #>         lvc <- 3.45 #>         label(\"Central volume of distribution (V)\") #>         CclnormSd <- c(0, 0.5) #>     }) #>     model({ #>         ka <- exp(lka) #>         cl <- exp(lcl) #>         vc <- exp(lvc) #>         Cc <- linCmt() #>         Cc ~ lnorm(CclnormSd) #>     }) #> } #> <environment: 0x558155b59830> readModelDb(\"PK_1cmt\") |> addResErr(c(\"addSd\", \"propSd\")) #>   #>   #> ! remove population parameter `propSd` #> ℹ add residual parameter `CcaddSd` and set estimate to 1 #> ℹ add residual parameter `CcpropSd` and set estimate to 1 #> ℹ change initial estimate of `CcaddSd` to `1` #> ℹ change initial estimate of `CcpropSd` to `0.5` #> function ()  #> { #>     description <- \"One compartment PK model with linear clearance\" #>     ini({ #>         lka <- 0.45 #>         label(\"Absorption rate (Ka)\") #>         lcl <- 1 #>         label(\"Clearance (CL)\") #>         lvc <- 3.45 #>         label(\"Central volume of distribution (V)\") #>         CcaddSd <- c(0, 1) #>         CcpropSd <- c(0, 0.5) #>     }) #>     model({ #>         ka <- exp(lka) #>         cl <- exp(lcl) #>         vc <- exp(lvc) #>         Cc <- linCmt() #>         Cc ~ add(CcaddSd) + prop(CcpropSd) #>     }) #> } #> <environment: 0x558155b43a18>"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addTransit.html","id":null,"dir":"Reference","previous_headings":"","what":"To add transit compartments to the model — addTransit","title":"To add transit compartments to the model — addTransit","text":"add transit compartments model","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addTransit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To add transit compartments to the model — addTransit","text":"","code":"addTransit(   model,   transit,   central = \"central\",   depot = \"depot\",   transitComp = \"transit\",   ktr = \"ktr\" )"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addTransit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To add transit compartments to the model — addTransit","text":"model model function transit number transit compartments added central character vector representing central compartment depot character vector representing depot compartment transitComp transit compartment prefix ktr parameter name transit compartment rate","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addTransit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To add transit compartments to the model — addTransit","text":"model transit compartment added","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addTransit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"To add transit compartments to the model — addTransit","text":"","code":"readModelDb(\"PK_1cmt_des\") |>   addTransit(3) #>   #>   #> ℹ promote `lktr` to population parameter with initial estimate 0.05 #> ℹ change initial estimate of `lktr` to `0.05` #>  ── rxode2-based free-form 5-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    lka    lcl    lvc propSd   lktr  #>   0.45   1.00   3.45   0.50   0.05  #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2         transit1 #> 3                  3         transit2 #> 4                  4         transit3 #> 5                  5          central #>  ── Model (Normalized Syntax): ──  #> function() { #>     description <- \"One compartment PK model with linear clearance using differential equations\" #>     dosing <- c(\"central\", \"depot\") #>     ini({ #>         lka <- 0.45 #>         label(\"Absorption rate (Ka)\") #>         lcl <- 1 #>         label(\"Clearance (CL)\") #>         lvc <- 3.45 #>         label(\"Central volume of distribution (V)\") #>         propSd <- c(0, 0.5) #>         label(\"Proportional residual error (fraction)\") #>         lktr <- 0.05 #>     }) #>     model({ #>         ktr <- exp(lktr) #>         ka <- exp(lka) #>         cl <- exp(lcl) #>         vc <- exp(lvc) #>         kel <- cl/vc #>         d/dt(depot) <- -ka * depot #>         d/dt(transit1) <- ka * depot - ktr * transit1 #>         d/dt(transit2) <- ktr * transit1 - ktr * transit2 #>         d/dt(transit3) <- ktr * transit2 - ktr * transit3 #>         d/dt(central) <- ktr * transit3 - kel * central #>         Cc <- central/vc #>         Cc ~ prop(propSd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modeldb.html","id":null,"dir":"Reference","previous_headings":"","what":"Model library for nlmixr2 — modeldb","title":"Model library for nlmixr2 — modeldb","text":"data frame available models nlmixr2lib, generated package.  Custom modeldb may used.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modeldb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model library for nlmixr2 — modeldb","text":"","code":"modeldb"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modeldb.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Model library for nlmixr2 — modeldb","text":"data frame 17 rows 5 columns name Model name can used extract model model library description Model description free text; model parameters comma separated string listing either parameter model defined population/individual effects population effect parameter DV definition dependent variable(s) filename Filename model.  default installed model library read demand","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modellib.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the model from the model library — modellib","title":"Get the model from the model library — modellib","text":"function gets model available model library","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modellib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the model from the model library — modellib","text":"","code":"modellib(name = NULL, eta = NULL, reserr = NULL)"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modellib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the model from the model library — modellib","text":"name character name model load (NULL, lists available base models) eta vector parameters add random effects (sometimes referred inter-individual variability, IIV) reserr type types residual error (currently \"addSd\", \"propSd\", \"lnormSd\" accepted)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modellib.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the model from the model library — modellib","text":"function returns function model code (NULL  model = NULL)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modellib.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the model from the model library — modellib","text":"first draft just look proof concept","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modellib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the model from the model library — modellib","text":"","code":"modellib(name = \"PK_1cmt\") #> function() { #>   description <- \"One compartment PK model with linear clearance\" #>   ini({ #>     lka <- 0.45 ; label(\"Absorption rate (Ka)\") #>     lcl <- 1 ; label(\"Clearance (CL)\") #>     lvc  <- 3.45 ; label(\"Central volume of distribution (V)\") #>     propSd <- 0.5 ; label(\"Proportional residual error (fraction)\") #>   }) #>   model({ #>     ka <- exp(lka) #>     cl <- exp(lcl) #>     vc  <- exp(lvc) #>  #>     Cc <- linCmt() #>     Cc ~ prop(propSd) #>   }) #> } #> <environment: 0x558155678c08> modellib(name = \"PK_1cmt\", eta = c(\"ka\", \"vc\"), reserr = \"addSd\") #>   #>   #>   #>   #> → Adding eta to lka instead of ka due to mu-referencing #>   #>   #> → Adding eta to lvc instead of vc due to mu-referencing #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ promote `etalka` to between subject variability with initial estimate 0.1 #> ℹ change initial estimate of `etalka` to `0.1` #> ℹ promote `etalvc` to between subject variability with initial estimate 0.1 #> ℹ change initial estimate of `etalvc` to `0.1` #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ! remove population parameter `propSd` #> ℹ add residual parameter `CcaddSd` and set estimate to 1 #> ℹ change initial estimate of `CcaddSd` to `1` #> function ()  #> { #>     description <- \"One compartment PK model with linear clearance\" #>     ini({ #>         lka <- 0.45 #>         label(\"Absorption rate (Ka)\") #>         lcl <- 1 #>         label(\"Clearance (CL)\") #>         lvc <- 3.45 #>         label(\"Central volume of distribution (V)\") #>         CcaddSd <- c(0, 1) #>         etalka ~ 0.1 #>         etalvc ~ 0.1 #>     }) #>     model({ #>         ka <- exp(lka + etalka) #>         cl <- exp(lcl) #>         vc <- exp(lvc + etalvc) #>         Cc <- linCmt() #>         Cc ~ add(CcaddSd) #>     }) #> } #> <environment: 0x55815408b9a0> modellib(name = \"PK_1cmt\", reserr = \"addSd\") #>   #>   #> ! remove population parameter `propSd` #> ℹ add residual parameter `CcaddSd` and set estimate to 1 #> ℹ change initial estimate of `CcaddSd` to `1` #> function ()  #> { #>     description <- \"One compartment PK model with linear clearance\" #>     ini({ #>         lka <- 0.45 #>         label(\"Absorption rate (Ka)\") #>         lcl <- 1 #>         label(\"Clearance (CL)\") #>         lvc <- 3.45 #>         label(\"Central volume of distribution (V)\") #>         CcaddSd <- c(0, 1) #>     }) #>     model({ #>         ka <- exp(lka) #>         cl <- exp(lcl) #>         vc <- exp(lvc) #>         Cc <- linCmt() #>         Cc ~ add(CcaddSd) #>     }) #> } #> <environment: 0x558156e2fdf8>"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/readModelDb.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a model from the nlmixr2 model database — readModelDb","title":"Read a model from the nlmixr2 model database — readModelDb","text":"Read model nlmixr2 model database","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/readModelDb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a model from the nlmixr2 model database — readModelDb","text":"","code":"readModelDb(name)"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/readModelDb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a model from the nlmixr2 model database — readModelDb","text":"name name model (must one modeldb$name)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/readModelDb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a model from the nlmixr2 model database — readModelDb","text":"model function","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/readModelDb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a model from the nlmixr2 model database — readModelDb","text":"","code":"readModelDb(\"PK_1cmt\") #> function() { #>   description <- \"One compartment PK model with linear clearance\" #>   ini({ #>     lka <- 0.45 ; label(\"Absorption rate (Ka)\") #>     lcl <- 1 ; label(\"Clearance (CL)\") #>     lvc  <- 3.45 ; label(\"Central volume of distribution (V)\") #>     propSd <- 0.5 ; label(\"Proportional residual error (fraction)\") #>   }) #>   model({ #>     ka <- exp(lka) #>     cl <- exp(lcl) #>     vc  <- exp(lvc) #>  #>     Cc <- linCmt() #>     Cc ~ prop(propSd) #>   }) #> } #> <environment: 0x5581575ddb00>"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/removeComp.html","id":null,"dir":"Reference","previous_headings":"","what":"To remove peripheral compartments from the model — removeComp","title":"To remove peripheral compartments from the model — removeComp","text":"remove peripheral compartments model","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/removeComp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To remove peripheral compartments from the model — removeComp","text":"","code":"removeComp(   model,   peripheral,   central = \"central\",   depot = \"depot\",   peripheralComp = \"peripheral\",   vp = \"vp\",   vc = \"vc\",   q = \"q\" )"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/removeComp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To remove peripheral compartments from the model — removeComp","text":"model model function peripheral number peripheral compartments remove central character vector representing central compartment depot character vector representing depot compartment peripheralComp character vector representing prefix peripheral compartments vp parameter representing peripheral volume first (central) compartment prefix compartments vc parameter representing central volume first (central) compartment prefix compartment's volume q inter-compartmental clearance parameter prefix (depending model)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/removeComp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To remove peripheral compartments from the model — removeComp","text":"rxode2 model function/ui compartment removed","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/removeComp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"To remove peripheral compartments from the model — removeComp","text":"","code":"library(rxode2) readModelDb(\"PK_2cmt_des\") |> removeComp(1) #>   #>   #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    lka    lcl    lvc propSd  #>   0.45   1.00   3.00   0.50  #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2          central #>  ── Model (Normalized Syntax): ──  #> function() { #>     description <- \"Two compartment PK model with linear clearance using differential equations\" #>     ini({ #>         lka <- 0.45 #>         label(\"Absorption rate (Ka)\") #>         lcl <- 1 #>         label(\"Clearance (CL)\") #>         lvc <- 3 #>         label(\"Central volume of distribution (V)\") #>         propSd <- c(0, 0.5) #>         label(\"Proportional residual error (fraction)\") #>     }) #>     model({ #>         ka <- exp(lka) #>         cl <- exp(lcl) #>         vc <- exp(lvc) #>         kel <- cl/vc #>         d/dt(depot) <- -ka * depot #>         d/dt(central) <- ka * depot - kel * central #>         Cc <- central/vc #>         Cc ~ prop(propSd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/removeDepot.html","id":null,"dir":"Reference","previous_headings":"","what":"To convert from first order oral absorption to IV/Intravenous — removeDepot","title":"To convert from first order oral absorption to IV/Intravenous — removeDepot","text":"convert first order oral absorption IV/Intravenous","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/removeDepot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To convert from first order oral absorption to IV/Intravenous — removeDepot","text":"","code":"removeDepot(model, central = \"central\", depot = \"depot\")"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/removeDepot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To convert from first order oral absorption to IV/Intravenous — removeDepot","text":"model model function central character vector represents central compartment model depot character vector represents depot model","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/removeDepot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To convert from first order oral absorption to IV/Intravenous — removeDepot","text":"Returns model depot first order absorption model removed","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/removeDepot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"To convert from first order oral absorption to IV/Intravenous — removeDepot","text":"","code":"readModelDb(\"PK_1cmt_des\") |>   removeDepot() #>   #>   #> ! remove population parameter `lka` #>  ── rxode2-based free-form 1-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    lcl    lvc propSd  #>   1.00   3.45   0.50  #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1          central #>  ── Model (Normalized Syntax): ──  #> function() { #>     description <- \"One compartment PK model with linear clearance using differential equations\" #>     dosing <- c(\"central\", \"depot\") #>     ini({ #>         lcl <- 1 #>         label(\"Clearance (CL)\") #>         lvc <- 3.45 #>         label(\"Central volume of distribution (V)\") #>         propSd <- c(0, 0.5) #>         label(\"Proportional residual error (fraction)\") #>     }) #>     model({ #>         cl <- exp(lcl) #>         vc <- exp(lvc) #>         kel <- cl/vc #>         d/dt(central) <- -kel * central #>         Cc <- central/vc #>         Cc ~ prop(propSd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/removeTransit.html","id":null,"dir":"Reference","previous_headings":"","what":"To remove transit compartments from the model — removeTransit","title":"To remove transit compartments from the model — removeTransit","text":"remove transit compartments model","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/removeTransit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To remove transit compartments from the model — removeTransit","text":"","code":"removeTransit(   model,   transit,   central = \"central\",   depot = \"depot\",   transitComp = \"transit\",   ktr = \"ktr\" )"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/removeTransit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To remove transit compartments from the model — removeTransit","text":"model model function transit number transit compartments remove central character vector representing central compartment depot character vector representing depot compartment transitComp transit compartment prefix ktr parameter name transit compartment rate","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/removeTransit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To remove transit compartments from the model — removeTransit","text":"rxode2 model transit compartment removed","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/removeTransit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"To remove transit compartments from the model — removeTransit","text":"","code":"# In this example the transit is added and then a few are removed  readModelDb(\"PK_1cmt_des\") |>   addTransit(4) |>   removeTransit(3) #>   #>   #> ℹ promote `lktr` to population parameter with initial estimate 0.05 #> ℹ change initial estimate of `lktr` to `0.05` #>  ── rxode2-based free-form 3-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    lka    lcl    lvc propSd   lktr  #>   0.45   1.00   3.45   0.50   0.05  #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2         transit1 #> 3                  3          central #>  ── Model (Normalized Syntax): ──  #> function() { #>     description <- \"One compartment PK model with linear clearance using differential equations\" #>     dosing <- c(\"central\", \"depot\") #>     ini({ #>         lka <- 0.45 #>         label(\"Absorption rate (Ka)\") #>         lcl <- 1 #>         label(\"Clearance (CL)\") #>         lvc <- 3.45 #>         label(\"Central volume of distribution (V)\") #>         propSd <- c(0, 0.5) #>         label(\"Proportional residual error (fraction)\") #>         lktr <- 0.05 #>     }) #>     model({ #>         ktr <- exp(lktr) #>         ka <- exp(lka) #>         cl <- exp(lcl) #>         vc <- exp(lvc) #>         kel <- cl/vc #>         d/dt(depot) <- -ka * depot #>         d/dt(transit1) <- ka * depot - ktr * transit1 #>         d/dt(central) <- ktr * transit1 - kel * central #>         Cc <- central/vc #>         Cc ~ prop(propSd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/searchReplace.html","id":null,"dir":"Reference","previous_headings":"","what":"Search within a model to replace part of the model — searchReplace","title":"Search within a model to replace part of the model — searchReplace","text":"Search within model replace part model","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/searchReplace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search within a model to replace part of the model — searchReplace","text":"","code":"searchReplace(object, find, replace)  searchReplaceHelper(object, find, replace)"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/searchReplace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search within a model to replace part of the model — searchReplace","text":"object function specifying nlmixr2 model find, replace Character scalars parts model replace","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/searchReplace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search within a model to replace part of the model — searchReplace","text":"object find replaced replace","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/searchReplace.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Search within a model to replace part of the model — searchReplace","text":"searchReplaceHelper(): helper function searchReplace (intended users use directly)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/updateOncologyXenograftSimeoni2004.html","id":null,"dir":"Reference","previous_headings":"","what":"Update an oncology xenograft model based on Simeoni 2004 — updateOncologyXenograftSimeoni2004","title":"Update an oncology xenograft model based on Simeoni 2004 — updateOncologyXenograftSimeoni2004","text":"Update oncology xenograft model based Simeoni 2004","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/updateOncologyXenograftSimeoni2004.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update an oncology xenograft model based on Simeoni 2004 — updateOncologyXenograftSimeoni2004","text":"","code":"updateOncologyXenograftSimeoni2004(   object,   ncmt,   damagedCmtName = \"damagedCells\",   drugEffectName = \"drugEffectCyclingCells\",   undamagedCmtName = \"cyclingCells\",   tumorVolName = \"tumorVol\",   transitRateName = \"damageTransit\" )"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/updateOncologyXenograftSimeoni2004.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update an oncology xenograft model based on Simeoni 2004 — updateOncologyXenograftSimeoni2004","text":"object Fitted object function specifying model. ncmt desired number damaged cell compartments damagedCmtName, undamagedCmtName, tumorVolName character string names compartments damaged cells, undamaged cells, calculated tumor volume (sum undamaged damaged cells) drugEffectName, transitRateName character string names drug effect transit rate (used model block)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/updateOncologyXenograftSimeoni2004.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update an oncology xenograft model based on Simeoni 2004 — updateOncologyXenograftSimeoni2004","text":"updated model new number compartments","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/updateOncologyXenograftSimeoni2004.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update an oncology xenograft model based on Simeoni 2004 — updateOncologyXenograftSimeoni2004","text":"","code":"library(rxode2) readModelDb(\"oncology_xenograft_simeoni_2004\") %>%   updateOncologyXenograftSimeoni2004(ncmt = 5) #> ℹ You can modify the number of damaged cell compartments in the model using the function updateOncologyXenograftSimeoni2004(model, ncmt) #>   #>   #> ℹ add covariate `damagedCells1` #> ℹ add covariate `damagedCells2` #> ℹ add covariate `damagedCells3` #> ℹ add covariate `damagedCells4` #> ℹ add covariate `damagedCells5` #>  ── rxode2-based free-form 6-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>  ldamageTransit      ldrugSlope ltumorExpGrowth ltumorLinGrowth  tumorVolpropSd  #>     -0.03252319     -7.37137930     -1.29828348     -0.20579491      0.20000000  #>   tumorVoladdSd  #>     30.00000000  #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1     cyclingCells #> 2                  2    damagedCells1 #> 3                  3    damagedCells2 #> 4                  4    damagedCells3 #> 5                  5    damagedCells4 #> 6                  6    damagedCells5 #>  ── Model (Normalized Syntax): ──  #> function() { #>     depends <- \"Cc\" #>     description <- \"Oncology tumor growth model in xenograft models\" #>     reference <- \"Monica Simeoni, Paolo Magni, Cristiano Cammia, Giuseppe De Nicolao, Valter Croci, Enrico Pesenti, Massimiliano Germani, Italo Poggesi, Maurizio Rocchetti; Predictive Pharmacokinetic-Pharmacodynamic Modeling of Tumor Growth Kinetics in Xenograft Models after Administration of Anticancer Agents. Cancer Res 1 February 2004; 64 (3): 1094–1101. https://doi.org/10.1158/0008-5472.CAN-03-2524\" #>     units <- list(time = \"day\") #>     ini({ #>         ldamageTransit <- c(-2.30258509299405, -0.0325231917055601,  #>             2.30258509299405) #>         label(\"Transit rate through damage (1/day)\") #>         ldrugSlope <- c(-11.5129254649702, -7.37137930126383,  #>             -2.30258509299405) #>         label(\"Linear drug effect on cycling cells (1/(day*ng/mL))\") #>         ltumorExpGrowth <- c(-6.90775527898214, -1.29828348379718,  #>             0.693147180559945) #>         label(\"Tumor exponential growth rate (1/day)\") #>         ltumorLinGrowth <- c(-4.60517018598809, -0.205794912979597,  #>             1.6094379124341) #>         label(\"Tumor linear growth rate (tumor volume/day)\") #>         tumorVolpropSd <- c(0, 0.2) #>         label(\"Proportional residual error (fraction)\") #>         tumorVoladdSd <- c(0, 30) #>         label(\"Additive residual error (tumor volume)\") #>     }) #>     model({ #>         damageTransit <- exp(ldamageTransit) #>         drugSlope <- exp(ldrugSlope) #>         tumorExpGrowth <- exp(ltumorExpGrowth) #>         tumorLinGrowth <- exp(ltumorLinGrowth) #>         cyclingCells(0) <- tumorVol0 #>         psi <- 20 #>         tumorVol <- cyclingCells + damagedCells1 + damagedCells2 +  #>             damagedCells3 + damagedCells4 + damagedCells5 #>         drugEffectCyclingCells <- drugSlope * Cc #>         d/dt(cyclingCells) <- tumorExpGrowth * cyclingCells/(1 +  #>             (tumorExpGrowth/tumorLinGrowth * tumorVol)^psi)^(1/psi) -  #>             drugEffectCyclingCells * cyclingCells #>         tumorVol ~ prop(tumorVolpropSd) + add(tumorVoladdSd) #>         d/dt(damagedCells1) <- drugEffectCyclingCells * cyclingCells -  #>             damageTransit * damagedCells1 #>         d/dt(damagedCells2) <- damageTransit * (damagedCells1 -  #>             damagedCells2) #>         d/dt(damagedCells3) <- damageTransit * (damagedCells2 -  #>             damagedCells3) #>         d/dt(damagedCells4) <- damageTransit * (damagedCells3 -  #>             damagedCells4) #>         d/dt(damagedCells5) <- damageTransit * (damagedCells4 -  #>             damagedCells5) #>     }) #> }"},{"path":"https://nlmixr2.github.io/nlmixr2lib/news/index.html","id":"version-0209000","dir":"Changelog","previous_headings":"","what":"Version 0.2.0.9000","title":"Version 0.2.0.9000","text":"Add Carlsson Petri (2021) liraglutide PK model cp related cpaddSd cppropSd renamed Cc, CcaddSd CcpropSd (fix #70).","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/news/index.html","id":"version-020","dir":"Changelog","previous_headings":"","what":"Version 0.2.0","title":"Version 0.2.0","text":"CRAN release: 2023-03-29 Work new rxode2 version 2.0.12 model() ini() assignment methods. Therapeutic-area specific models begun added. Models can now give user additional information load via message meta-data. Models can now different directories. change ease maintaining library, change affects users. regression addEta() change parameter, related change rxode2, fixed. addEta() detects add etas robustly covariates parameter.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/news/index.html","id":"models-added-0-2-0","dir":"Changelog","previous_headings":"","what":"Models added","title":"Version 0.2.0","text":"Add Davda (2014) mAb consensus model Add Liu (2017) time-dependent clearance model based nivolumab Add Kovalenko (2020) dupilumab PK model Add Soehoel (2022) tralokinumab PK model Add Zhu (2017) lebrikizumab PK model","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/news/index.html","id":"version-010","dir":"Changelog","previous_headings":"","what":"Version 0.1.0","title":"Version 0.1.0","text":"CRAN release: 2022-10-31 Initial version","code":""}]
